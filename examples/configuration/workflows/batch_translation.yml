# Batch Translation - Multi-language Document Translation
name: "Batch Document Translation"
version: "1.0.0"
description: "Translate documents into multiple languages simultaneously using OpenAI models"
author: "AgentFlow Team"

metadata:
  created: "2024-01-15T00:00:00Z"
  tags: ["openai", "batch-processing", "translation", "multilingual"]
  category: "batch"

config:
  timeout: "20m"
  max_retries: 3
  output_format: "text"
  log_level: "info"

inputs:
  source_text:
    type: "string"
    required: true
    description: "The text content to translate (supports markdown format)"
    example: "# Welcome\n\nThis is a sample document with **markdown** formatting."
  
  target_languages:
    type: "array"
    required: false
    default: ["Chinese", "Spanish", "Japanese", "German", "Russian", "Portuguese", "French", "Korean"]
    description: "List of target languages for translation"
  
  model:
    type: "string"
    required: false
    default: "gpt-4o"
    enum: ["gpt-4o", "gpt-4", "gpt-3.5-turbo", "gpt-4o-mini"]
    description: "OpenAI model to use for translation"

  temperature:
    type: "number"
    required: false
    default: 0.1
    description: "Temperature for translation (low for consistency)"

  preserve_formatting:
    type: "boolean"
    required: false
    default: true
    description: "Whether to preserve markdown formatting and links"

environment:
  OPENAI_API_KEY: "required"

workflow:
  type: "batch"
  nodes:
    - name: "translate_text"
      type: "llm"
      description: "Translate text to target language"
      batch_input: "{{ inputs.target_languages }}"
      config:
        model: "{{ inputs.model }}"
        temperature: "{{ inputs.temperature }}"
        max_tokens: 4000
        system: "You are an expert translator. Translate text accurately while preserving the original meaning, tone, and formatting."
        prompt: |
          {% if inputs.preserve_formatting %}
          Please translate the following text into {{ batch_item }}. 
          Keep the original markdown format, links, and code blocks intact.
          Directly return the translated text without any other comments or explanations.
          {% else %}
          Please translate the following text into {{ batch_item }}.
          Directly return the translated text without any other comments or explanations.
          {% endif %}

          Original text:
          {{ inputs.source_text }}

          Translation:
        timeout: "5m"
      outputs:
        translation: "$.response"
        language: "{{ batch_item }}"

    - name: "format_output"
      type: "template"
      description: "Format translation results for output"
      depends_on: ["translate_text"]
      config:
        template: |
          {% for result in translate_text.results %}
          ===== {{ result.language | upper }} =====
          {{ result.translation }}
          
          {% endfor %}
      outputs:
        formatted_translations: "$.rendered"

    - name: "create_individual_files"
      type: "file"
      description: "Create individual translation files"
      depends_on: ["translate_text"]
      batch_input: "{{ translate_text.results }}"
      config:
        operation: "write"
        path: "output/README_{{ batch_item.language | upper }}.md"
        content: "{{ batch_item.translation }}"
        encoding: "utf-8"
      outputs:
        file_path: "$.path"

outputs:
  all_translations:
    source: "{{ format_output.formatted_translations }}"
    format: "text"
    file: "output/all_translations.txt"
  
  translation_summary:
    source: |
      {
        "total_languages": {{ inputs.target_languages | length }},
        "source_length": {{ inputs.source_text | length }},
        "languages": {{ inputs.target_languages | tojson }},
        "model_used": "{{ inputs.model }}",
        "files_created": [
          {% for lang in inputs.target_languages %}
          "README_{{ lang | upper }}.md"{% if not loop.last %},{% endif %}
          {% endfor %}
        ]
      }
    format: "json"
    file: "output/translation_summary.json"
  
  execution_report:
    source: "$"
    format: "json"
    file: "output/execution_report.json"
    include:
      - execution_time
      - model_used
      - batch_size
      - translation_count
      - total_tokens_used