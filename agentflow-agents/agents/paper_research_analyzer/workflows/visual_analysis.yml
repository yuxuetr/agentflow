# Paper Research Visual Analysis Workflow Configuration
# Extended workflow with visual output generation capabilities

name: "Paper Research Visual Analysis"
version: "1.1.0"
description: "Comprehensive PDF research paper analysis with visual mind maps and poster generation"

# Workflow configuration
config:
  # Analysis depth options: summary, insights, comprehensive, translation
  analysis_depth: "comprehensive"
  
  # Target language for translation (if analysis_depth includes translation)
  target_language: "en"
  
  # Model configuration
  model: "step-2-16k"
  
  # Visual output options
  generate_mind_map: true
  generate_visual_mindmap: true
  mindmap_format: "png"  # png, svg, html
  generate_poster: false  # Future feature
  
  # Output configuration
  output_dir: "./analysis_output"
  auto_open_visuals: false
  
  # Batch processing options
  concurrency_limit: 3

# Node definitions for visual workflow
nodes:
  - name: "pdf_parser"
    type: "pdf_parser"
    config:
      api_key: "${STEP_API_KEY}"
      
  - name: "summarizer"
    type: "summary_generator"
    dependencies: ["pdf_parser"]
    config:
      model: "${model}"
      
  - name: "insights_extractor"
    type: "insights_extractor"
    dependencies: ["pdf_parser"]
    config:
      model: "${model}"
      conditional: "${analysis_depth in [insights, comprehensive, translation]}"
      
  - name: "mind_mapper"
    type: "mind_map_generator"
    dependencies: ["insights_extractor"]
    config:
      model: "${model}"
      conditional: "${generate_mind_map && analysis_depth in [comprehensive, translation]}"
      
  - name: "markmap_visualizer"
    type: "markmap_visualizer"
    dependencies: ["mind_mapper"]
    config:
      export_format: "${mindmap_format}"
      auto_open: "${auto_open_visuals}"
      output_dir: "${output_dir}"
      conditional: "${generate_visual_mindmap && generate_mind_map}"
      
  # Future nodes for additional visual outputs
  - name: "poster_generator"
    type: "mcp_tool"
    dependencies: ["summarizer", "insights_extractor"]
    config:
      server_command: ["python", "image_gen_server.py"]
      tool_name: "generate_research_poster"
      parameters:
        summary: "{{summary}}"
        insights: "{{key_insights}}"
        style: "academic"
        size: "1024x1792"
      conditional: "${generate_poster}"
      
  - name: "translator"
    type: "translator"
    dependencies: ["summarizer"]
    config:
      model: "${model}"
      target_language: "${target_language}"
      conditional: "${analysis_depth == translation && target_language != 'en'}"
      
  - name: "results_compiler"
    type: "results_compiler"
    dependencies: ["summarizer", "insights_extractor", "mind_mapper", "markmap_visualizer", "translator"]
    config:
      analysis_depth: "${analysis_depth}"
      include_visuals: true

# Enhanced output configuration with visual files
output:
  formats:
    - markdown
    - json
    - html
    - visual
  
  files:
    summary: "summary.md"
    insights: "key_insights.json"
    mind_map: "mind_map.md"
    mind_map_visual: "mind_map.${mindmap_format}"
    research_poster: "research_poster.png"
    complete_analysis: "complete_analysis.json"
    visual_index: "visual_analysis.html"

# MCP server configurations
mcp_servers:
  markmap:
    type: "stdio"
    command: ["npx", "-y", "@jinzcdev/markmap-mcp-server"]
    description: "MarkMap mind map visualization"
    
  # Future MCP servers
  image_generation:
    type: "http"
    base_url: "http://localhost:8080/mcp"
    description: "AI image generation server"

# Environment variables
env:
  required:
    - STEP_API_KEY
  optional:
    - OUTPUT_DIR: "./analysis_output"
    - LOG_LEVEL: "info"
    - MINDMAP_FORMAT: "png"
    - AUTO_OPEN_VISUALS: "false"

# Tool registry for MCP integration
tools:
  markmap:
    server: "markmap"
    tool_name: "markdown-to-mindmap"
    description: "Convert Markdown to interactive mind map"
    input_schema:
      type: object
      properties:
        markdown:
          type: string
          description: "Markdown content to convert"
        open:
          type: boolean
          description: "Auto-open in browser"
          default: false
      required: ["markdown"]